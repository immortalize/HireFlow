version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hireflow-postgres-dev
    environment:
      POSTGRES_DB: hireflow_dev
      POSTGRES_USER: hireflow_user
      POSTGRES_PASSWORD: hireflow_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hireflow-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hireflow_user -d hireflow_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: hireflow-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hireflow_user:hireflow_password@postgres:5432/hireflow_dev
      JWT_SECRET: dev-jwt-secret-key
      PORT: 5000
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - hireflow-dev-network
    restart: unless-stopped
    command: npm run dev

  # Frontend Next.js App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: hireflow-frontend-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - hireflow-dev-network
    restart: unless-stopped
    command: npm run dev

volumes:
  postgres_dev_data:

networks:
  hireflow-dev-network:
    driver: bridge
